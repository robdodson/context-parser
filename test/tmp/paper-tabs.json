{
  "name": "paper-tabs",
  "description": "\n`paper-tabs` is a `core-selector` styled to look like tabs. Tabs make it easy to \nexplore and switch between different views or functional aspects of an app, or \nto browse categorized data sets.\n\nUse `selected` property to get or set the selected tab.\n\nExample:\n\n    <paper-tabs selected=\"0\">\n      <paper-tab>TAB 1</paper-tab>\n      <paper-tab>TAB 2</paper-tab>\n      <paper-tab>TAB 3</paper-tab>\n    </paper-tabs>\n\nSee <a href=\"#paper-tab\">paper-tab</a> for more information about \n`paper-tab`.\n\nA common usage for `paper-tabs` is to use it along with `core-pages` to switch\nbetween different views.\n\n    <paper-tabs selected=\"{{selected}}\">\n      <paper-tab>Tab 1</paper-tab>\n      <paper-tab>Tab 2</paper-tab>\n      <paper-tab>Tab 3</paper-tab>\n    </paper-tabs>\n  \n    <core-pages selected=\"{{selected}}\">\n      <div>Page 1</div>\n      <div>Page 2</div>\n      <div>Page 3</div>\n    </core-pages>\n    \n`paper-tabs` adapt to mobile/narrow layout when there is a `core-narrow` class set\non itself or any of its ancestors.\n\nTo use links in tabs, add `link` attribute to `paper-tabs` and put an `<a>`\nelement in `paper-tab`.\n\nExample:\n\n    <paper-tabs selected=\"0\" link>\n      <paper-tab>\n        <a href=\"#link1\" horizontal center-center layout>TAB ONE</a>\n      </paper-tab>\n      <paper-tab>\n        <a href=\"#link2\" horizontal center-center layout>TAB TWO</a>\n      </paper-tab>\n      <paper-tab>\n        <a href=\"#link3\" horizontal center-center layout>TAB THREE</a>\n      </paper-tab>\n    </paper-tabs>\n\nStyling tabs:\n\nTo change the sliding bar color:\n\n    paper-tabs.pink::shadow #selectionBar {\n      background-color: #ff4081;\n    }\n    \nTo change the ink ripple color:\n\n    paper-tabs.pink paper-tab::shadow #ink {\n      color: #ff4081;\n    }\n\n",
  "extends": [
    {
      "name": "core-selector",
      "url": null
    }
  ],
  "mixins": [
    {
      "name": "Polymer.CoreResizable",
      "url": "https://github.com/polymer/core-resizable"
    }
  ],
  "homepage": "github.io",
  "attributes": [
    {
      "name": "noink",
      "description": "\nIf true, ink ripple effect is disabled.\n\n",
      "type": "boolean",
      "default": "false"
    },
    {
      "name": "nobar",
      "description": "\nIf true, the bottom bar to indicate the selected tab will not be shown.\n\n",
      "type": "boolean",
      "default": "false"
    },
    {
      "name": "noslide",
      "description": "\nIf true, the slide effect for the bottom bar is disabled.\n\n",
      "type": "boolean",
      "default": "false"
    },
    {
      "name": "scrollable",
      "description": "\nIf true, tabs are scrollable and the tab width is based on the label width.\n\n",
      "type": "boolean",
      "default": "false"
    },
    {
      "name": "disableDrag",
      "description": "\nIf true, dragging on the tabs to scroll is disabled.\n\n",
      "type": "boolean",
      "default": "false"
    },
    {
      "name": "hideScrollButton",
      "description": "\nIf true, scroll buttons (left/right arrow) will be hidden for scrollable tabs.\n\n",
      "type": "boolean",
      "default": "false"
    }
  ],
  "methods": [
    {
      "name": "updateBar",
      "description": "\nInvoke this to update the size and position of the bottom bar.  Usually\nyou only need to call this if the `paper-tabs` is initially hidden and\nlater becomes visible.\n\n"
    }
  ],
  "parentMethods": [
    {
      "name": "core-selector",
      "methods": [
        {
          "name": "selectPrevious",
          "description": "\nSelects the previous item. This should be used in single selection only.\n\n                 wrap to the end\n",
          "params": [
            {
              "type": "boolean",
              "name": "wrapped",
              "description": "if true and it is already at the first item,"
            }
          ]
        },
        {
          "name": "selectNext",
          "description": "\nSelects the next item.  This should be used in single selection only.\n\n                 wrap to the front\n",
          "params": [
            {
              "type": "boolean",
              "name": "wrapped",
              "description": "if true and it is already at the last item,"
            }
          ]
        }
      ]
    },
    {
      "name": "CoreResizable",
      "methods": [
        {
          "name": "resizableAttachedHandler",
          "description": "\nUser must call from `attached` callback\n\n"
        },
        {
          "name": "resizableDetachedHandler",
          "description": "\nUser must call from `detached` callback\n\n"
        }
      ]
    }
  ],
  "parentAttributes": [
    {
      "name": "core-selector",
      "methods": [
        {
          "name": "selected",
          "description": "\nGets or sets the selected element.  Default to use the index\nof the item element.\n\nIf you want a specific attribute value of the element to be\nused instead of index, set \"valueattr\" to that attribute name.\n\nExample:\n\n    <core-selector valueattr=\"label\" selected=\"foo\">\n      <div label=\"foo\"></div>\n      <div label=\"bar\"></div>\n      <div label=\"zot\"></div>\n    </core-selector>\n\nIn multi-selection this should be an array of values.\n\nExample:\n\n    <core-selector id=\"selector\" valueattr=\"label\" multi>\n      <div label=\"foo\"></div>\n      <div label=\"bar\"></div>\n      <div label=\"zot\"></div>\n    </core-selector>\n\n    this.$.selector.selected = ['foo', 'zot'];\n\n",
          "type": "Object",
          "default": "null"
        },
        {
          "name": "multi",
          "description": "\nIf true, multiple selections are allowed.\n\n",
          "type": "boolean",
          "default": "false"
        },
        {
          "name": "valueattr",
          "description": "\nSpecifies the attribute to be used for \"selected\" attribute.\n\n",
          "type": "string",
          "default": "'name'"
        },
        {
          "name": "selectedClass",
          "description": "\nSpecifies the CSS class to be used to add to the selected element.\n\n",
          "type": "string",
          "default": "'core-selected'"
        },
        {
          "name": "selectedProperty",
          "description": "\nSpecifies the property to be used to set on the selected element\nto indicate its active state.\n\n",
          "type": "string",
          "default": "''"
        },
        {
          "name": "selectedAttribute",
          "description": "\nSpecifies the attribute to set on the selected element to indicate\nits active state.\n\n",
          "type": "string",
          "default": "'active'"
        },
        {
          "name": "selectedItem",
          "description": "\nReturns the currently selected element. In multi-selection this returns\nan array of selected elements.\nNote that you should not use this to set the selection. Instead use\n`selected`.\n\n",
          "type": "Object",
          "default": "null"
        },
        {
          "name": "selectedModel",
          "description": "\nIn single selection, this returns the model associated with the\nselected element.\nNote that you should not use this to set the selection. Instead use \n`selected`.\n\n",
          "type": "Object",
          "default": "null"
        },
        {
          "name": "selectedIndex",
          "description": "\nIn single selection, this returns the selected index.\nNote that you should not use this to set the selection. Instead use\n`selected`.\n\n",
          "type": "number",
          "default": "-1"
        },
        {
          "name": "excludedLocalNames",
          "description": "\nNodes with local name that are in the list will not be included \nin the selection items.  In the following example, `items` returns four\n`core-item`'s and doesn't include `h3` and `hr`.\n\n    <core-selector excludedLocalNames=\"h3 hr\">\n      <h3>Header</h3>\n      <core-item>Item1</core-item>\n      <core-item>Item2</core-item>\n      <hr>\n      <core-item>Item3</core-item>\n      <core-item>Item4</core-item>\n    </core-selector>\n\n",
          "type": "string",
          "default": "''"
        },
        {
          "name": "target",
          "description": "\nThe target element that contains items.  If this is not set \ncore-selector is the container.\n\n",
          "type": "Object",
          "default": "null"
        },
        {
          "name": "itemsSelector",
          "description": "\nThis can be used to query nodes from the target node to be used for \nselection items.  Note this only works if `target` is set\nand is not `core-selector` itself.\n\nExample:\n\n    <core-selector target=\"{{$.myForm}}\" itemsSelector=\"input[type=radio]\"></core-selector>\n    <form id=\"myForm\">\n      <label><input type=\"radio\" name=\"color\" value=\"red\"> Red</label> <br>\n      <label><input type=\"radio\" name=\"color\" value=\"green\"> Green</label> <br>\n      <label><input type=\"radio\" name=\"color\" value=\"blue\"> Blue</label> <br>\n      <p>color = {{color}}</p>\n    </form>\n\n",
          "type": "string",
          "default": "''"
        },
        {
          "name": "activateEvent",
          "description": "\nThe event that would be fired from the item element to indicate\nit is being selected.\n\n",
          "type": "string",
          "default": "'tap'"
        },
        {
          "name": "notap",
          "description": "\nSet this to true to disallow changing the selection via the\n`activateEvent`.\n\n",
          "type": "boolean",
          "default": "false"
        }
      ]
    },
    {
      "name": "CoreResizable"
    }
  ],
  "parentEvents": [
    {
      "name": "core-selector",
      "methods": [
        {
          "name": "core-select",
          "description": "\nFired when an item's selection state is changed. This event is fired both\nwhen an item is selected or deselected. The `isSelected` detail property\ncontains the selection state.\n\n",
          "params": [
            {
              "type": "boolean",
              "name": "detail.isSelected",
              "description": "true for selection and false for deselection"
            },
            {
              "type": "Object",
              "name": "detail.item",
              "description": "the item element"
            }
          ]
        },
        {
          "name": "core-activate",
          "description": "\nFired when an item element is tapped.\n\n",
          "params": [
            {
              "type": "Object",
              "name": "detail.item",
              "description": "the item element"
            }
          ]
        }
      ]
    },
    {
      "name": "CoreResizable"
    }
  ]
}